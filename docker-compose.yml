version: "3.4"

networks:
  start-nginx-php-mysql-node:

services:
  web:
    image: nginx:latest
    ports:
      - "8080:80"
    working_dir: /code
    volumes:
      - ./:/code
      - ./.docker/nginx/conf:/etc/nginx/conf.d
    restart:
      always
    depends_on:
      - php
      - database
    networks:
      - start-nginx-php-mysql-node

  php:
    build:
      context: ./.docker/php
    #   image: php:8-fpm
    working_dir: /code
    depends_on:
      - database
    volumes:
      - ./:/code
    networks:
      - start-nginx-php-mysql-node

  database:
    #   image: mysql:8.0
    #   NOTE: use of "mysql_native_password" is not recommended: https://dev.mysql.com/doc/refman/8.0/en/upgrading-from-previous-series.html#upgrade-caching-sha2-password
    #   (this is just an example, not intended to be a production configuration)
    #   command: --default-authentication-plugin=mysql_native_password
    image: mysql:8
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    environment:
      MYSQL_DATABASE: ${DATABASE_NAME:-orders}
      MYSQL_USER: ${DATABASE_USER:-orders}
      MYSQL_PASSWORD: ${DATABASE_PASSWORD:-user_pwd}
      MYSQL_ROOT_PASSWORD: ${DATABASE_ROOT_PASSWORD:-root_pwd}
    ports:
      - "33060:3306"
    restart: always
    volumes:
      - ./.docker/database/init:/docker-entrypoint-initdb.d
      - ./.docker/database/data:/var/lib/mysql
    networks:
      - start-nginx-php-mysql-node
